-- name: Install required packages 
  become: true
  hosts:  node3
  tasks: 
  - name: install git
    apt: 
      name: git
      state: present
  - name: install wget
    apt: 
      name: wget
      state: present
  - name: install Apache
    apt: 
      name: apache2
      state: present
  - name: restart apache2
    service: name=apache2 state=restarted
  - name: install ufw
    apt: 
      name: ufw
      state: present
  - name: install unzip
    apt: 
      name: unzip
      state: present
  - name: install curl
    apt: 
      name: curl
      state: present
  - name: Update and upgrade packages 
    apt: upgrade=dist force_apt_get=yes

  - name: Update and upgrade  packages
    apt:
      upgrade: yes
      update_cache: yes

  - name: set timezone to Africa/Lagos 
    timezone: 
       name: Africa/Lagos 

- name: Install mysql 
  become: true
  hosts: all
  tasks: 
  - name: install mysql-server
    apt: 
      name: mysql-server
      state: present
  - name: install mysql-client
    apt: 
      name: mysql-client
      state: present
  - name: install python3-pymysql
    apt: 
      name: python3-pymysql
      state: present
  - name: install python3-mysqldb
    apt: 
      name: python3-mysqldb
      state: present
  - name: install libmysqlclient-dev
    apt: 
      name: libmysqlclient-dev
      state: present

  - name: start and enable mysql service
    service:
      name: mysql
      state: started
      enabled: yes

- name: MySQL Configuration
  become: true
  hosts: node3
  user: ansible
  tasks:
   - name: Change the auhentication plugin of mysql root user to mysql_native_password
     shell: mysql -u root -e 'UPDATE mysql.user SET plugin="mysql_native_password" WHERE user="root" AND host="localhost"'
   - name: Flush Privileges
     shell: mysql -u root -e 'FLUSH PRIVILEGES'
   - name: Sets the root password
     mysql_user:
       login_host: 'localhost'
       login_user: 'root'
       login_password: ''
       name: root
       password: 'root'
       state: present
   - name: Removes all anonymous user accounts
     mysql_user:
       name: ''
       host_all: yes
       state: absent
       login_user: root
       login_password: 'root'


- name: CREATE DATABASE AND NEW USER IN MYSQL
  become: true
  hosts: all 
  tasks:
    - name: Creates new user; jubriladeyi
      mysql_user:
        login_host: 'localhost'
        name: 'jubriladeyi'
        password: 'jubriladeyi'
        state: present
        login_user: root
        login_password: 'root'
    - name: Creates new database jubriladeyi
      mysql_db:
         name: 'jubriladeyi'
         login_host: 'localhost'
         state: present
         login_user: root
         login_password: 'root'
    - name: Grants user jubriladeyi ALL access/privileges to database;jubriladeyi
      mysql_user:
         name: 'jubriladeyi'
         login_host: 'localhost'
         state: present
         login_user: root
         login_password: 'root'
         priv: 'jubriladeyi.*:ALL,GRANT'

- name: UFW Configuration
  become: true
  hosts: all
  tasks:
  - name: UFW - Allow HTTP on port 80
    ufw:
      rule: allow
      port: "80"
      proto: tcp
  - name: UFW - Allow SSH on port 22
    ufw:
      rule: allow
      port: "22"
      proto: tcp
  - name: UFW -  Allow HTTPS
    ufw:
      rule: allow
      port: "443"    

  - name: UFW -  Allow  Mysql
    ufw:
      rule: allow
      port: 3306

- name: Install php and its dependencies, install composer 
  become: true
  hosts: node3
  tasks: 
  - name: Add php repository 
    apt_repository:
     repo: 'ppa:ondrej/php'
  - name: Updating the repo
    apt: update_cache=yes 
  - name: Install PHP 
    apt: name=php8.1 state=latest
  - name: Install PHP MB
    apt: name=php8.1-mbstring state=latest  
  - name: Install PHP XML
    apt: name=php8.1-xml state=latest   
  - name: Install PHP ZIP
    apt: name=php8.1-zip state=latest
  - name: Install PHP CURL
    apt: name=php8.1-curl state=latest 
  - name: Install libapache2-mod-php
    apt: name=libapache2-mod-php state=latest  
  - name: PHP DEV
    apt: name=php8.1-dev state=latest
  - name: PHP mysql
    apt: name=php8.1-mysql state=latest 
  - name: PHP  XMLRPC
    apt: name=php8.1-xmlrpc state=latest
  - name: PHP  DEV
    apt: name=php8.1-dev state=latest
  - name: PHP common
    apt: name=php8.1-common state=latest
  - name: PHP gd
    apt: name=php8.1-gd state=latest
  - name: PHP imagick
    apt: name=php8.1-imagick state=latest
  - name: PHP CLI
    apt: name=php8.1-cli state=latest
  - name: PHP imap
    apt: name=php8.1-imap state=latest
  - name: PHP intl
    apt: name=php8.1-intl state=latest
  - name: Install some required softwares for php functionality
    become: true  
    apt: 
      name: 
        - ca-certificates
        - apt-transport-https
        - software-properties-common
        - lsb-release 
      state: latest
      update_cache: true


  - name: Dowload php-composer
    get_url: 
     url: https://getcomposer.org/installer
     dest: /tmp/installer

  - name: verify installatiion script is safe 
    command: php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"

  - name: Install composer
    command: php /tmp/installer  --install-dir=/usr/local/bin/ --filename=composer
    args: 
      creates: /usr/local/bin/composer 

  - name: rename composer.phar to composer
    shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer
    args:
      creates: /usr/local/bin/composer

  - name: Make composer executable 
    file: 
      path: /usr/local/bin/composer
      mode: a+x
      state: file

- name: Clone laravel repository from github and rename laravel project
  hosts: node3
  become: true
  tasks:
    - name: Clone  github repository
      git:
        repo: https://github.com/f1amy/laravel-realworld-example-app.git
        dest: /var/www/jubriladeyi
        clone: yes
        update: no


- name: Apache Configuration
  become: true
  hosts: node3
  tasks: 
   - name: Copy laravel project 
     shell: sudo mv /var/www/jubriladeyi /var/www/html

   - name: Change permission
     shell: sudo chgrp -R www-data /var/www/html/jubriladeyi

   - name: Change permission
     shell: sudo chmod -R 775 /var/www/html/jubriladeyi/storage

   - name: Change permission
     shell: sudo chmod -R ug+rwx  /var/www/html/jubriladeyi/bootstrap/cache


   - name: Copy .env file
     copy: 
       src: /var/www/html/jubriladeyi/.env.example
       dest: /var/www/html/jubriladeyi/.env
       remote_src: true

   - name: Modify .env file
     template: src=/home/ansible/play/playbook/.env  dest="/var/www/html/jubriladeyi/.env" owner=www-data mode=0644

   - name: Modify /routes/web.php file (Add frontend to laravel route) 
     template: src=/home/ansible/play/playbook/.web.php dest="/var/www/html/jubriladeyi/routes/web.php" owner=www-data  mode=0644

   - name: Copy .htacces file
     copy: 
       src: /home/ansible/play/playbook/.htaccess  
       dest: /var/www/html/jubriladeyi/.htaccess

   - name: Remove default apache vhost config from sites-enabled
     file: name=/etc/apache2/sites-enabled/000-default.conf state=absent

   - name: create apache vhosts for domain
     template: src=/home/ansible/play/playbook/web.conf.j2 dest="/etc/apache2/sites-available/jubriladeyi.conf" owner=www-data mode=0644

   - name: Update a2ensite
     command: a2ensite jubriladeyi

   - name: Update enable apache rewrite module
     shell:  a2enmod rewrite

  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      service:
        name: apache2
        state: restarted

- name: Migrate Database 
  become: yes
  hosts: node3
  tasks: 
   - name: Composer update
     shell: composer update --no-interaction
     args: 
       chdir: /var/www/html/jubriladeyi
    

   - name: Composer Install
     shell: composer update --no-interaction
     args: 
       chdir: /var/www/html/jubriladeyi
  
   - name: Composer create-project 
     shell: composer create-project  --no-interaction
     args: 
       chdir: /var/www/html/jubriladeyi

   - name: Run the php -artisan migrate --seed command 
     shell: php artisan migrate --seed 
     args: 
       chdir: /var/www/html/jubriladeyi

- name: SSL Installation to secure domain
  hosts: node3
  become: true
  tasks:
  - name: Install Python Package
    apt: name=python3 update_cache=yes state=latest

  - name: Install Let's Encrypt Package
    apt: name=python3-certbot-apache update_cache=yes state=latest

  - name: Create and Install Cert Using apache Plugin
    command: "certbot --apache -d  jubriladeyi.me -m jbadeyi@icloud.com --agree-tos --noninteractive --redirect"


- name: Inatall postgresql using bash script
  hosts: node3
  become: true
  tasks: 
   - name: copy bash script to location
     template: src="/home/ansible/play/postgresql.sh" dest="/home/ansible/postgresql.sh"
   - name: make bash  script executable 
     shell: chmod +x /home/ansible/postgresql.sh
   - name: run bash script
     shell: sh /home/ansible/postgresql.sh --no-interaction



